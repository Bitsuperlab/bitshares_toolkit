>>> !client alice
>>> debug_start_simulated_time "20140620T144030.000000"
OK
>>> wallet_create default "password"
OK
>>> wallet_set_automatic_backups false
false
>>> debug_deterministic_private_keys 0 101 init true
[ ${ expect_regex(r'(?:\s*"[a-zA-Z0-9]+"[,]?){101}') }$ ]
>>> wallet_delegate_set_block_production ALL true
OK
>>> wallet_set_transaction_scanning true
true
>>> debug_wait_for_block_by_number 1
OK
>>> wallet_account_create issuer
${ expect_regex(r'(?:\s*"[a-zA-Z0-9]+"[,]?){101}') }$
>>> wallet_account_balance issuer
No balances found.
>>> debug_deterministic_private_keys 0 1 alice true issuer false true
[
  "5HpUwrtzSztqQpJxVHLsrZkVzVjVv9nUXeauYeeSxguzcmpgRcK"
]
>>> wallet_account_balance issuer
ACCOUNT                         BALANCE                     
============================================================
issuer                          100,000.00000 XTS           
>>> blockchain_get_account issuer
No account found.
>>> wallet_account_register issuer issuer
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
2014-06-20T14:40:30 PENDING   issuer              issuer              0.00000 XTS             register issuer                             0.50000 XTS         ${ expect_regex(r'[0-9a-f]*') }$
>>> wallet_account_create someone
${ expect_regex(r'(?:\s*"[a-zA-Z0-9]+"[,]?){101}') }$
>>> debug_deterministic_private_keys 1 1 alice true someone false true
[
  "5JuNNRpMexdnkHMn5RocYnKePjmHB8HHoaEuYWFHxC8eH4ELWi7"
]
>>> wallet_account_register someone issuer
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
2014-06-20T14:40:30 PENDING   issuer              someone             0.00000 XTS             register someone                            0.50000 XTS         ${ expect_regex(r'[0-9a-f]*') }$
${ expect_regex(r'(?:\s*"[a-zA-Z0-9]+"[,]?){101}') }$
>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 2
OK
>>> wallet_uia_create issuer ASSSET "Test Asset" "A test asset" 10000.000
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
2014-06-20T14:40:40 PENDING   issuer              issuer              0.00000 XTS             create ASSSET (Test Asset)                  5,000.50000 XTS     ${ expect_regex(r'[0-9a-f]*') }$
>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 3
OK
>>> blockchain_get_asset ASSSET
{
  "id": 4,
  "symbol": "ASSSET",
  "name": "Test Asset",
  "description": "A test asset",
  "public_data": {},
  "issuer_account_id": 102,
  "precision": 1000,
  "registration_date": "2014-06-20T14:40:40",
  "last_update": "2014-06-20T14:40:40",
  "maximum_share_supply": 10000000000,
  "current_share_supply": 0,
  "collected_fees": 0,
  "flags": 0,
  "issuer_permissions": 31,
  "transaction_fee": 0,
  "market_fee": 0,
  "authority": {
    "required": 1,
    "owners": [
      ${ expect_regex(r'(?:\s*"[a-zA-Z0-9]+"[,]?){101}') }$
    ]
  },
  "whitelist": []
}
>>> help wallet_uia_update_description
Usage:
Updates an existing user-issued asset; only the public_data can be updated if any shares of the asset exist

Parameters:
  symbol (asset_symbol, required): the ticker symbol for the asset to update
  name (optional_string, optional, defaults to null): the new name to give the asset; or null to keep the current name
  description (optional_string, optional, defaults to null): the new description to give the asset; or null to keep the current description
  public_data (optional_variant, optional, defaults to null): the new public_data to give the asset; or null to keep the current public_data
  maximum_share_supply (optional_double, optional, defaults to null): the new maximum_share_supply to give the asset; or null to keep the current maximum_share_supply
  precision (optional_uint64_t, optional, defaults to null): the new precision to give the asset; or null to keep the current precision
  issuer_transaction_fee (share_type, optional, defaults to 0): an additional fee (denominated in issued asset) charged by the issuer on every transaction that uses this asset type
  issuer_market_fee (real_amount, optional, defaults to -1): an additional fee (denominated in percent) charged by the issuer on every order that is matched
  flags (asset_permission_array, optional, defaults to []): a set of flags set by the issuer (if they have permission to set them)
  issuer_permissions (asset_permission_array, optional, defaults to ["restricted","retractable","market_halt","balance_halt","supply_unlimit"]): a set of permissions an issuer retains
  issuer_account_name (account_name, optional, defaults to ""): used to transfer the asset to a new user
  required_sigs (uint32_t, optional, defaults to 0): number of signatures from the authority required to control this asset record
  authority (address_list, optional, defaults to []): owner keys that control this asset record

Returns:
  transaction_record

#{ name not empty }#
>>> wallet_uia_update_description issuer ASSSET ""
35011 invalid_asset_name: invalid asset name
${ expect_regex(r'(?s).*') }$
>>> wallet_uia_update_description issuer ASSSET "Woot!"
{
  "index": 0,
  "record_id": "${ expect_regex(r'[0-9a-f]*') }$",
  "block_num": 0,
  "is_virtual": false,
  "is_confirmed": false,
  "is_market": false,
  "trx": {
    "expiration": "2014-06-20T15:40:50",
    "reserved": null,
    "operations": [{
        "type": "update_asset_ext_op_type",
        "data": {
          "asset_id": 4,
          "name": "Woot!",
          "description": "",
          "public_data": null,
          "maximum_share_supply": null,
          "precision": null,
          "flags": 0,
          "issuer_permissions": 31,
          "issuer_account_id": 102,
          "transaction_fee": 0,
          "market_fee": 55536,
          "authority": {
            "required": 0,
            "owners": []
          }
        }
      },{
        "type": "withdraw_op_type",
        "data": {
          "balance_id": "XTSEUci2GH1cjDvCireCmeoukCitp8aru725",
          "amount": 50000,
          "claim_input_data": ""
        }
      }
    ],
    "signatures": [
      "${ expect_regex(r'[0-9a-f]*') }$",
      "${ expect_regex(r'[0-9a-f]*') }$"
    ]
  },
  "ledger_entries": [{
      "from_account": "${ expect_regex(r'[a-zA-Z0-9]+') }$",
      "to_account": "${ expect_regex(r'[a-zA-Z0-9]+') }$",
      "amount": {
        "amount": 0,
        "asset_id": 0
      },
      "memo": "update ASSSET asset",
      "memo_from_account": null
    }
  ],
  "fee": {
    "amount": 50000,
    "asset_id": 0
  },
  "created_time": "2014-06-20T14:40:50",
  "received_time": "2014-06-20T14:40:50",
  "extra_addresses": []
}

#{ max shares > 0 && < 10^15 ??? }#
>>> help wallet_uia_update_supply
>>> wallet_uia_update_supply issuer ASSSET -1
35005 invalid_asset_amount: invalid asset amount
${ expect_regex(r'(?s).*') }$
>>> wallet_uia_update_supply issuer ASSSET 100000000000.0001
35005 invalid_asset_amount: invalid asset amount
${ expect_regex(r'(?s).*') }$
>>> wallet_uia_update_supply issuer ASSSET 100000000000.0000
${ expect_json() }$

>>> help wallet_uia_issue
Usage:
Issues new shares of a given asset type


Parameters:
  amount (real_amount, required): the amount of shares to issue
  symbol (asset_symbol, required): the ticker symbol for asset
  to_account_name (account_name, required): the name of the account to receive the shares
  memo_message (string, optional, defaults to ""): the memo to send to the receiver

Returns:
  transaction_record
>>> wallet_uia_update_supply issuer ASSSET 100000.000
${ expect_json() }$

#{ issue negative amount }#
>>> wallet_uia_issue -100 ASSSET someone "There!"
35006 negative_issue: negative issue
${ expect_regex(r'(?s).*') }$

#{ issue more than max shares }#
>>> wallet_uia_issue 200000 ASSSET someone "There!"
35007 over_issue: over issue
${ expect_regex(r'(?s).*') }$

#{ issue some }#
>>> wallet_uia_issue 2000 ASSSET someone "There!"
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
2014-06-20T14:40:50 PENDING   issuer              someone             2,000.000 ASSSET        issue 2,000.000 ASSSET                      0.50000 XTS         ${ expect_regex(r'[0-9a-f]*') }$

#{ issue more than max total shares }#
>>> wallet_uia_issue 99000 ASSSET someone "There!"
35007 over_issue: over issue
${ expect_regex(r'(?s).*') }$

#{ can't update precision if supply > 0 }#
>>> wallet_uia_issue ASSSET null null null null 10000
10 assert_exception: Assert Exception
!this->precision.valid(): 
${ expect_regex(r'(?s).*') }$
>>> wallet_uia_issue ASSSET null null null null 100
10 assert_exception: Assert Exception
!this->precision.valid(): 
${ expect_regex(r'(?s).*') }$

#{ can't update max shares if supply > 0 && !flags.supply_unlimit }#
>>> wallet_uia_update_supply issuer ASSSET 1000.000
10 assert_exception: Assert Exception
!this->maximum_share_supply.valid(): 
${ expect_regex(r'(?s).*') }$
>>> help wallet_uia_update_active_flags
>>> wallet_uia_update_active_flags issuer ASSSET dynamic_max_supply true
${ expect_json() }$
>>> wallet_uia_update_supply issuer ASSSET 1000.000
10 assert_exception: Assert Exception
current_share_supply >= 0 && current_share_supply <= maximum_share_supply: 
${ expect_regex(r'(?s).*') }$
>>> wallet_uia_update_supply issuer ASSSET 90000.000
${ expect_json() }$

#{ set "restricted" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["restricted","supply_unlimit"]
${ expect_json() }$
#{ send to unauthorized }#
#{ issue to unauthorized }#
#{ authorize someone }#
#{ send to authorized }#
#{ issue to authorized }#
#{ authorize someone else }#
#{ send from authorized to unauthorized }#
#{ send from authorized to authorized }#

#{ set "retractable" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["restricted","retractable","supply_unlimit"]
${ expect_json() }$
#{ retract someone's balance }#

#{ set "market_halt" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["restricted","retractable","market_halt","supply_unlimit"]
${ expect_json() }$
#{ create ask + bid txs }#
#{ wait }#
#{ ensure orders weren't executed }#

#{ set "balance_halt" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["restricted","retractable","market_halt","balance_halt","supply_unlimit"]
${ expect_json() }$
#{ send to unauthorized }#
#{ sent to authorized }#
#{ create ask + bid }#
#{ burn }#
#{ issue }#

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 4
OK
>>> wallet_account_balance someone
ACCOUNT                         BALANCE                     
============================================================
someone                         100,000.00000 XTS           
                                2,000.000 ASSSET            

#{ remove "balance_halt" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["restricted","retractable","market_halt","supply_unlimit"]
${ expect_json() }$

#{ remove "restricted" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["retractable","market_halt","supply_unlimit"]
${ expect_json() }$
#{ send to unauthorized }#
#{ issue to unauthorized }#

#{ remove "retractable" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["market_halt","supply_unlimit"]
${ expect_json() }$
#{ retract someone's balance }#

#{ remove "supply_unlimit" flag }#
>>> wallet_asset_update ASSSET null null null null null null null ["market_halt"]
${ expect_json() }$
#{ issue }#
#{ issue to someone }#

#{ remove "market_halt" flag }#
>>> wallet_asset_update ASSSET null null null null null null null []
${ expect_json() }$
#{ wait }#
#{ ensure orders were executed }#

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 4
OK

#{ issuer_permission can be unset (but not set) when supply > 0 }#
#{ flags can only be set when issuer_permission is set }#
>>> wallet_asset_update ASSSET null null null null null null null [] ["retractable","market_halt","balance_halt","supply_unlimit"]
${ expect_json() }$
>>> wallet_asset_update ASSSET null null null null null null null [] ["restricted","retractable","market_halt","balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & restricted: 
${ expect_regex(r'(?s).*') }$
>>> wallet_asset_update ASSSET null null null null null null null ["restricted"] ["retractable","market_halt","balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & restricted: 
${ expect_regex(r'(?s).*') }$

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 5
OK
>>> wallet_asset_update ASSSET null null null null null null null [] ["market_halt","balance_halt","supply_unlimit"]
${ expect_json() }$
>>> wallet_asset_update ASSSET null null null null null null null [] ["retractable","market_halt","balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & retractable: 
${ expect_regex(r'(?s).*') }$
>>> wallet_asset_update ASSSET null null null null null null null ["retractable"] ["market_halt","balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & retractable: 
${ expect_regex(r'(?s).*') }$

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 6
OK
>>> wallet_asset_update ASSSET null null null null null null null [] ["balance_halt","supply_unlimit"]
${ expect_json() }$
>>> wallet_asset_update ASSSET null null null null null null null [] ["market_halt","balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & market_halt:
${ expect_regex(r'(?s).*') }$
>>> wallet_asset_update ASSSET null null null null null null null ["market_halt"] ["balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & market_halt:
${ expect_regex(r'(?s).*') }$

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 7
OK
>>> wallet_asset_update ASSSET null null null null null null null [] ["supply_unlimit"]
${ expect_json() }$
>>> wallet_asset_update ASSSET null null null null null null null [] ["balance_halt","supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & balance_halt:
${ expect_regex(r'(?s).*') }$
>>> wallet_asset_update ASSSET null null null null null null null ["balance_halt"] ["supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & balance_halt:
${ expect_regex(r'(?s).*') }$

>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 8
OK
>>> wallet_asset_update ASSSET null null null null null null null [] []
${ expect_json() }$
>>> wallet_asset_update ASSSET null null null null null null null [] ["supply_unlimit"]
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & supply_unlimit:
${ expect_regex(r'(?s).*') }$
>>> wallet_asset_update ASSSET null null null null null null null ["supply_unlimit"] []
10 assert_exception: Assert Exception
current_asset_record->issuer_permissions & supply_unlimit:
${ expect_regex(r'(?s).*') }$

>>> wallet_asset_create FOOTSHOT "Shoot myself in the foot" issuer "Shoot myself in the foot" 10000000 1000 {} false
TIMESTAMP           BLOCK     FROM                TO                  AMOUNT                  MEMO                                        FEE                 ID      
======================================================================================================================================================================
${ expect_isotime() }$ PENDING   issuer              issuer              0.00000 XTS             create FOOTSHOT (Shoot myself in the foot)  5,000.50000 XTS     ${ expect_regex(r'[0-9a-f]*') }$
>>> debug_advance_time 1 block
OK
>>> debug_wait_for_block_by_number 9
OK
#{ set required sigs > number of owners }#
>>> wallet_asset_update FOOTSHOT null null null null null null null [] ["restricted","retractable","market_halt","balance_halt"] "" 5
${ expect_json() }$
>>> wallet_asset_update FOOTSHOT null null null null null null null [] ["restricted","retractable","market_halt","balance_halt"] "" 1
31005 missing_signature: missing signature
${ expect_regex(r'(?s).*') }$

>>> quit

